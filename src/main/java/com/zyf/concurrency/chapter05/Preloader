// 使用FutureTask预加载稍后需要的数据
public class Preloader{
    private final FutureTask<ProductInfo> future = 
        new FutureTask<ProductInfo>(new Callable<ProductInfo>() {
            public ProductInfo call() throws DataLoadException{
                return loadProductInfo();
            }
        });
    
    private final Thread thread = new Thread(future);
    public void start() {thread.start();}
    public ProductInfo get() throws DataLoadException, InterruptedException {
        try{ 
            return future.get();                                 
        } catch(ExecutionException e) {
            Throwable cause = e.getCause();
            if (cause instanceof DataLoadException)
                throw (DataLoadException) cause;
            else
                throw launderThrowable(cause);
        }                
    }

    public static RuntimeException launderThrowable(Throwable t) {
        if (t instanceof RuntimeException) 
            return (RuntimeException) t;
    }
}